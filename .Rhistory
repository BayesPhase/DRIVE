rmlist=ls()
# Load necessary libraries
library(dplyr) # for data manipulation
library(lubridate) # for Date-time handling
library(ggplot2) # for data visualization
library(knitr) # table creation
library(readxl) # for reading Excel files
library(stringr) # for text pattern matching
# Load the data
data <- read.csv("S:/Biostats/BIO-STAT/Brown_Lexie/Projects/Leavens, Elly/Alam_BIOS898/KSU_Study_147694_7-25-2024(bradley.brown@carolinamedicalelectronics.com)_date_format.csv")
# Excluding subject_number 9991 and puff durations of 0.174
data <- data %>%
filter(subject_number != 9991, duration != 0.174)
# Converting puff_date_time to Date-Time format and extracting the date
data <- data %>%
mutate(puff_date_time = mdy_hm(puff_date_time), # Converting to Date-Time format
puff_date = as.Date(puff_date_time))     # Extracting only the date
# sequential day index for each participant after removing Day 1
data_with_days <- data %>%
group_by(subject_number) %>%
arrange(puff_date) %>%
mutate(day_number = dense_rank(puff_date)) %>%  # Recalculate day number after filtering
filter(day_number != 1) %>%  # Remove Day 1 data for all subjects
mutate(day_number = dense_rank(puff_date)) %>%  # Reset day_number after filtering
ungroup()
# mean, SD, min, max of duration by participant and day
summary_statistics <- data_with_days %>%
group_by(subject_number, puff_date) %>%
summarise(
mean_duration = mean(duration, na.rm = TRUE),
sd_duration = sd(duration, na.rm = TRUE),
min_duration = min(duration, na.rm = TRUE),
max_duration = max(duration, na.rm = TRUE),
.groups = 'drop'
)
summary_statistics
# mean, SD, min, max of duration by participant
summary_stat_by_subj <- data_with_days %>%
group_by(subject_number) %>%
summarise(
mean_duration = mean(duration, na.rm = TRUE),
sd_duration = sd(duration, na.rm = TRUE),
min_duration = min(duration, na.rm = TRUE),
max_duration = max(duration, na.rm = TRUE),
.groups = 'drop'
)
summary_stat_by_subj
# how many days of use for each participant
days_of_use <- data_with_days %>%
group_by(subject_number) %>%
summarise(
days_of_use = n_distinct(puff_date),
.groups = 'drop'
)
days_of_use
# Bar plot of days of use for each participant
ggplot(days_of_use, aes(x = as.factor(subject_number), y = days_of_use, fill = as.factor(subject_number))) +
geom_bar(stat = "identity") +
geom_text(aes(label = days_of_use), vjust = -0.5, size = 5, fontface = "bold") +
labs(title = "Number of Days of Use for Each Participant",
x = "Participant", y = "Days of Use",
fill = "Participant") +
theme(
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
legend.text = element_text(size = 12),
legend.position = "right"
)
# total puff duration for each day and participant
total_puff_per_day <- data_with_days %>%
group_by(subject_number, day_number) %>%
summarise(total_duration = sum(duration, na.rm = TRUE),
puff_count = n(),
.groups = 'drop')
# the day with the lowest and highest puff duration
puff_stats_df <- total_puff_per_day %>%
group_by(subject_number) %>%
summarise(
day_with_the_lowest_puff = day_number[which.min(total_duration)],
puffs_on_lowest_day = puff_count[which.min(total_duration)],
day_with_the_highest_puff = day_number[which.max(total_duration)],
puffs_on_highest_day = puff_count[which.max(total_duration)],
.groups = 'drop'
)
# `days_of_use` with the puff statistics
final_stats <- puff_stats_df %>%
left_join(days_of_use, by = "subject_number")
# Create the final summary table
final_table <- final_stats %>%
select(subject_number, days_of_use, day_with_the_lowest_puff, puffs_on_lowest_day,
day_with_the_highest_puff, puffs_on_highest_day) %>%
rename(
"Subject Number" = subject_number,
"Days of Use" = days_of_use,
"Day number with Lowest Puff" = day_with_the_lowest_puff,
"Number of Times Puffed on Lowest Puff Day" = puffs_on_lowest_day,
"Day number with Highest Puff" = day_with_the_highest_puff,
"Number of Times Puffed on Highest Puff Day" = puffs_on_highest_day
)
# Print the final table
final_table %>%
knitr::kable()
######################################################
#################### Merging two files ##########################
# Load the Excel file with subject information
data_rand <- read_excel("S:/Biostats/BIO-STAT/Brown_Lexie/Projects/Leavens, Elly/Alam_BIOS898/Leavens K01 Phase 1 Phase 2 Randomization_final.xlsx")
# Merging data based on subject_number and Subject ID
merged_data <- left_join(data_with_days, data_rand, by = c("subject_number" = "Subject ID"))
# Adding a column for Race and Smoker Type based on the Stratum
merged_data <- merged_data %>%
mutate(
race = case_when(
str_detect(Stratum, "AA") ~ "AA",
str_detect(Stratum, "Caucasian") ~ "Caucasian"
),
smoker_type = case_when(
str_detect(Stratum, "light") ~ "Light Smoker",
str_detect(Stratum, "heavy") ~ "Heavy Smoker"
)
)
# Summarizing by race and nicotine level
puff_summary <- merged_data %>%
distinct(subject_number, .keep_all = TRUE) %>%  # Keeps only one row per unique subject
group_by(race, `P2 Assignment`) %>%
summarise(count = n(), .groups = 'drop')  # Count the number of unique subjects
puff_summary
# Plot: Count of subjects by race and nicotine level
ggplot(puff_summary, aes(x = race, y = count, fill = `P2 Assignment`)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Count of Subjects by Race and Nicotine Level", x = "Race", y = "Subjects", fill = "Nicotine Level") +
theme_minimal() +
scale_fill_manual(values = c("High" = "#1f77b4", "Low" = "#ff7f0e"))
# plot of puff duration for race and nicotine level
interaction.plot(
x.factor = merged_data$`P2 Assignment`,
trace.factor = merged_data$race,
response = merged_data$duration,
col = c("blue", "red"),
legend = TRUE,
xlab = "Nicotine Level",
ylab = "Puff Duration",
trace.label = "Race"
)
# Summarizing by race and smoker type
puff_summary2 <- merged_data %>%
distinct(subject_number, .keep_all = TRUE) %>%
group_by(race, smoker_type) %>%
summarise(count = n(), .groups = 'drop')  # Count the number of unique subjects
puff_summary2
# Plot: Count of subjects by race and smoker type
ggplot(puff_summary2, aes(x = race, y = count, fill = smoker_type)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Count of Subjects by Race and Smoker Type", x = "Race", y = "Subjects", fill = "Smoker Type") +
theme_minimal() +
scale_fill_manual(values = c("Heavy Smoker" = "#1f77b4", "Light Smoker" = "#ff7f0e"))
# Summarizing by smoker type and nicotine level (P2 Assignment)
puff_summary_smoker_type <- merged_data %>%
distinct(subject_number, .keep_all = TRUE) %>%  # Ensures one row per unique subject
group_by(smoker_type, `P2 Assignment`) %>%
summarise(count = n(), .groups = 'drop')  # Count the number of unique subjects by smoker type
# Plot: Count of subjects by smoker type and nicotine level (P2 Assignment)
ggplot(puff_summary_smoker_type, aes(x = smoker_type, y = count, fill = `P2 Assignment`)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Count of Subjects by Smoker Type and Nicotine Level",
x = "Smoker Type", y = "Subjects", fill = "Nicotine Level") +
theme_minimal() +
scale_fill_manual(values = c("High" = "#1f77b4", "Low" = "#ff7f0e"))
# plot of puff duration for smoker type and nicotine level
interaction.plot(
x.factor = merged_data$`P2 Assignment`,
trace.factor = merged_data$smoker_type,
response = merged_data$duration,
col = c("green", "purple"),
legend = TRUE,
xlab = "Nicotine Level",
ylab = "Puff Duration",
trace.label = "Smoker Type"
)
# Summarize the average puff duration by nicotine level
summary_puff <- merged_data %>%
group_by(`P2 Assignment`) %>%
summarise(
mean_puff_volume = mean(duration, na.rm = TRUE),
sd_puff_volume = sd(duration, na.rm = TRUE),
count = n()
)
summary_puff
# Boxplot for puff duration difference by nicotine level
ggplot(merged_data, aes(x = `P2 Assignment`, y = duration, fill = `P2 Assignment`)) +
geom_boxplot() +
labs(title = "Puff Duration by Nicotine Level", x = "Nicotine Level", y = "Puff Duration", fill = "Nicotine Level") +
theme_minimal()
# T-test to compare puff duration between high and low nicotine groups
#t_test_result <- t.test(duration ~ `P2 Assignment`, data = merged_data)
#t_test_result
# Q-Q plot to assess normality
ggplot(merged_data, aes(sample = duration, color = `P2 Assignment`)) +
stat_qq() +
stat_qq_line() +
facet_wrap(~ `P2 Assignment`) +
labs(title = "Q-Q Plot for Puff Duration by Nicotine Level", color = "Nicotine Level") +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black")
)
# Kolmogorov-Smirnov test for normality
#ks.test(merged_data$duration[merged_data$`P2 Assignment` == "High"], "pnorm", mean(merged_data$duration), sd(merged_data$duration))
#ks.test(merged_data$duration[merged_data$`P2 Assignment` == "Low"], "pnorm", mean(merged_data$duration), sd(merged_data$duration))
# Since normality assumption is violated, Wilcoxon rank-sum test
wilcox.test(duration ~ `P2 Assignment`, data = merged_data)
################################ ANOVA
# ANOVA model
anova_model <- aov(duration ~ `P2 Assignment` * race * smoker_type, data = merged_data)
# summary of the ANOVA model
summary(anova_model)
# ANOVA model without race
anova_model_without_race <- aov(duration ~ `P2 Assignment` * smoker_type, data = merged_data)
# summary of the ANOVA model
summary(anova_model_without_race)
